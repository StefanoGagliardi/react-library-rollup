{"version":3,"file":"index.umd.development.js","sources":["../src/fields/InputCheckbox.tsx","../src/fields/InputEmail.tsx","../src/fields/InputPassword.tsx","../src/Helpers.ts","../src/fields/InputSelect.tsx","../src/fields/InputText.tsx","../src/fields/InputTextarea.tsx","../src/FormFields.tsx","../src/FormHeading.tsx","../src/FormButtonSubmit.tsx","../node_modules/style-inject/dist/style-inject.es.js","../src/MagicFormGenerator.tsx"],"sourcesContent":["// Import core\nimport React, { ReactElement, useEffect, useState } from 'react';\n\n// Import third parts\nimport { useFormContext } from 'react-hook-form';\nimport { FieldBase, FieldValidation } from '../types';\n\n// Import custom\n\nexport const InputCheckbox: React.FC<FieldBase> = (\n  props: FieldBase,\n): ReactElement => {\n  // const [invalid, setInvalid] = useState<boolean>(true);\n\n  const { register, errors, setValue, trigger } = useFormContext(); // retrieve all hook methods\n  const [validation, setValidation] = useState<FieldValidation>({});\n  const [checkboxValue, setCheckboxValue] = useState<boolean>(false);\n\n  // Build Validation Object\n  useEffect(() => {\n    // Copy reference props\n    const rawValidation = props.validation;\n\n    // Add regex for validate email pattern\n    setValidation(rawValidation);\n  }, []);\n\n  const handleCheckboxValue = () => {\n    // console.log('!checkboxValue', !checkboxValue);\n    setValue(props.name, !checkboxValue);\n\n    setCheckboxValue(!checkboxValue);\n    trigger();\n  };\n\n  return (\n    <>\n      <div className=\"fg__checkbox-wrapper\">\n        <input\n          id={props.id}\n          type=\"checkbox\"\n          className={\n            'form-control ' + (errors[props.name] ? 'is-invalid ' : ' ')\n          }\n          name={props.name}\n          checked={checkboxValue}\n          onChange={(_value: any) => {\n            // console.log('Checkbox onChange value:', value);\n          }}\n          autoComplete={props.autocomplete ? props.autocomplete : 'off'}\n          ref={register(validation)}\n        />\n        <span className=\"checkmark\" onClick={handleCheckboxValue}></span>\n        <div\n          className=\"fg__checkbox-text\"\n          dangerouslySetInnerHTML={{ __html: props.placeholder as string }}\n        />\n      </div>\n      <div className=\"invalid-feedback\">\n        {errors[props.name]?.type == 'required' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>Il campo è richiesto</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n      </div>\n    </>\n  );\n};\n\n// validationMessage\nexport default InputCheckbox;\n","// Import core\nimport React, { ReactElement, useEffect, useState } from 'react';\n\n// Import third parts\nimport { useFormContext } from 'react-hook-form';\n\n// Import custom\nimport { FieldBase, FieldValidation, ValidationValueMessage } from '../types';\n\n// Ract.FC<InputEmailProps>\nexport const InputEmail: React.FC<FieldBase> = (\n  props: FieldBase,\n): ReactElement => {\n  // const [invalid, setInvalid] = useState<boolean>(true);\n\n  const { register, errors, watch, setError, clearErrors } = useFormContext(); // retrieve all hook methods\n  const [validation, setValidation] = useState<FieldValidation>({});\n  const [minLength, setMinLength] = useState<number>(0);\n  const [maxLength, setMaxLength] = useState<number>(0);\n\n  // Build Validation Object\n  useEffect(() => {\n    // Copy reference props\n    const rawValidation = props.validation;\n\n    // If exists set minLength state for error message\n    if (props.validation.minLength) {\n      if ((props.validation.minLength as ValidationValueMessage).value) {\n        setMinLength(\n          parseInt(\n            (props.validation.minLength as ValidationValueMessage)\n              .value as string,\n          ),\n        );\n      } else {\n        setMinLength(parseInt(props.validation.minLength as string));\n      }\n    }\n\n    // If exists set maxLength state for error message\n    if (props.validation.maxLength) {\n      if ((props.validation.maxLength as ValidationValueMessage).value) {\n        setMaxLength(\n          parseInt(\n            (props.validation.maxLength as ValidationValueMessage)\n              .value as string,\n          ),\n        );\n      } else {\n        setMaxLength(parseInt(props.validation.maxLength as string));\n      }\n    }\n\n    // Normalize equalTo validation with validate method\n    if (\n      props.validation.equalTo !== undefined &&\n      (props.validation.equalTo as ValidationValueMessage).value\n    ) {\n      const equalToField = (props.validation.equalTo as ValidationValueMessage)\n        .value as string;\n      rawValidation.validate = (value: string) => value === watch(equalToField);\n    }\n\n    // Add regex for validate email pattern\n    setValidation({\n      ...rawValidation,\n      pattern: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\n    });\n  }, []);\n\n  // Update error object message for equalTo\n  useEffect(() => {\n    // console.log('useEFfect errors: ', errors);\n    if (\n      errors[props.name]?.type == 'validate' &&\n      (props.validation.equalTo as ValidationValueMessage).value\n    ) {\n      // console.log('useEFfect errors: ', errors);\n      setError('repeatEmail', {\n        type: 'equalTo',\n        message: 'I due indirizzi email devono coincidere',\n      });\n      clearErrors('validate');\n    }\n  }, [errors]);\n\n  return (\n    <>\n      <input\n        id={props.id}\n        type=\"email\"\n        className={'form-control ' + (errors[props.name] ? 'is-invalid ' : ' ')}\n        placeholder={props.placeholder}\n        name={props.name}\n        autoComplete={props.autocomplete ? props.autocomplete : 'off'}\n        ref={register(validation)}\n      />\n      <div className=\"invalid-feedback\">\n        {errors[props.name]?.type == 'required' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>Il campo email è richiesto</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'minLength' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>La lunghezza minima è {minLength} caratteri</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'maxLength' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>La lunghezza massima è {maxLength} caratteri</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'pattern' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>Inserire un&aposindirizzo email valido</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'validate' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>Rispettare le regole di validazione</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'equalTo' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>I due campi devono essere uguali</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n      </div>\n    </>\n  );\n};\n\n// errors[props.name] && <span>Il campo è richiesto</span>\n\nexport default InputEmail;\n","// Import core\nimport React, { ReactElement, useEffect, useState } from 'react';\n\n// Import third parts\nimport { useFormContext, ValidationValueMessage } from 'react-hook-form';\n\n// Import custom\nimport { FieldBase, FieldValidation } from '../types';\n\nexport const InputPassword: React.FC<FieldBase> = (\n  props: FieldBase,\n): ReactElement => {\n  // const [invalid, setInvalid] = useState<boolean>(true);\n\n  const { register, errors, watch } = useFormContext(); // retrieve all hook methods\n\n  const [validation, setValidation] = useState<FieldValidation>({});\n  const [minLength, setMinLength] = useState<number>(0);\n  const [maxLength, setMaxLength] = useState<number>(0);\n\n  // Build Validation Object\n  // TODO Fare un custom hook per uesta serie di operazioni?\n  useEffect(() => {\n    // Copy reference props\n    const rawValidation = props.validation;\n\n    // If exists set minLength state for error message\n    if (props.validation.minLength) {\n      if ((props.validation.minLength as ValidationValueMessage).value) {\n        setMinLength(\n          parseInt(\n            (props.validation.minLength as ValidationValueMessage)\n              .value as string,\n          ),\n        );\n      } else {\n        setMinLength(parseInt(props.validation.minLength as string));\n      }\n    }\n\n    // If exists set maxLength state for error  message\n    if (props.validation.maxLength) {\n      if ((props.validation.maxLength as ValidationValueMessage).value) {\n        setMaxLength(\n          parseInt(\n            (props.validation.maxLength as ValidationValueMessage)\n              .value as string,\n          ),\n        );\n      } else {\n        setMaxLength(parseInt(props.validation.maxLength as string));\n      }\n    }\n\n    // Normalize equalTo validation with validate method\n    if (\n      props.validation.equalTo !== undefined &&\n      (props.validation.equalTo as ValidationValueMessage).value\n    ) {\n      const equalToField = (props.validation.equalTo as ValidationValueMessage)\n        .value as string;\n      rawValidation.validate = (value: string) => value === watch(equalToField);\n    }\n\n    // Add regex for validate email pattern\n    setValidation({\n      ...rawValidation,\n    });\n  }, []);\n\n  return (\n    <>\n      <input\n        id={props.id}\n        type=\"password\"\n        className={'form-control ' + (errors[props.name] ? 'is-invalid ' : ' ')}\n        placeholder={props.placeholder}\n        name={props.name}\n        autoComplete={props.autocomplete ? props.autocomplete : 'off'}\n        ref={register(validation)}\n      />\n      <div className=\"invalid-feedback\">\n        {errors[props.name]?.type == 'required' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>Il campo password è richiesto</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'minLength' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>La lunghezza minima è {minLength} caratteri</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'maxLength' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>La lunghezza massima è {maxLength} caratteri</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'pattern' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>Rispettare le regole di formattazione</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'validate' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>Rispettare le regole di validazione</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'equalTo' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>I due campi devono essere uguali</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n      </div>\n    </>\n  );\n};\n\n// validationMessage\nexport default InputPassword;\n","import { FieldSelectData } from './types';\ninterface MessageDefault {\n  required: string;\n  minLength: string;\n  maxLength: string;\n  pattern: string;\n}\nexport const validationMessage: MessageDefault = {\n  required: 'Il campo {fieldName} è richiesto',\n  minLength: 'La lunghezza minima è {min} caratteri',\n  maxLength: 'La lunghezza massima è {max} caratteri',\n  pattern: 'Rispettare le regole di fomattazione',\n};\n\n// Get layout class by props\nexport const getLayoutValue = (layout: string): number => {\n  switch (layout) {\n    case '1':\n      return 1;\n    case '1/2':\n      return 0.5;\n    case '1/3':\n      return 0.33;\n    case '1/4':\n      return 0.25;\n    default:\n      return 1;\n  }\n};\n\nexport const getLayoutColClass = (layout: string): string => {\n  switch (layout) {\n    case '1':\n      return 'fg__col-full';\n    case '1/2':\n      return 'fg__col-half';\n    case '1/3':\n      return 'fg__col-third';\n    case '1/4':\n      return 'fg__col-fourth';\n    default:\n      return 'fg__col-full';\n  }\n};\n\n// Get default value from Select option list and return value\nexport const getSelectDefaultValue = (_data: FieldSelectData[]): string => {\n  return 'CO';\n};\n\ninterface Response {\n  status: boolean;\n  data: any;\n}\n\nexport const fetchData = async (url: string): Promise<Response> => {\n  const options: RequestInit = {};\n  try {\n    const response = await fetch(url, options);\n    const result = await response.json();\n    const res: Response = {\n      status: true,\n      data: result,\n    };\n    return res;\n  } catch (error) {\n    const response: Response = {\n      status: false,\n      data: [],\n    };\n    return response;\n  }\n};\n\nexport const onSubmitBackendCall = async (\n  url: string,\n  method: string,\n  data: any,\n): Promise<Response> => {\n  const getParams = new URLSearchParams(data);\n\n  let options: RequestInit = {};\n  if (method == 'GET') {\n    options = {\n      method: method,\n    };\n  } else {\n    options = {\n      method: method,\n      body: data,\n    };\n  }\n\n  try {\n    const response = await fetch(url + '?' + getParams, options);\n    const result = await response.json();\n    const res: Response = {\n      status: true,\n      data: result,\n    };\n    return res;\n  } catch (error) {\n    const response: Response = {\n      status: false,\n      data: [],\n    };\n    return response;\n  }\n};\n","// Import core\nimport React, { ReactElement, useEffect, useState } from 'react';\n\n// Import third parts\nimport { useFormContext } from 'react-hook-form';\n\n// Import custom\nimport {\n  FieldBase,\n  FieldSelectData,\n  FieldValidation,\n  ValidationValueMessage,\n} from '../types';\nimport { fetchData, getSelectDefaultValue } from '../Helpers';\n\nexport const InputSelect: React.FC<FieldBase> = (\n  props: FieldBase,\n): ReactElement => {\n  // Get <Select> data\n\n  // Form core\n  const { register, errors } = useFormContext(); // retrieve all hook methods\n\n  // State\n  const [validation, setValidation] = useState<FieldValidation>({});\n  const [loading, setLoading] = useState<boolean>(true);\n  const [optionData, setOptionData] = useState<FieldSelectData[]>([]);\n  const [defaultValue, setDefaultValue] = useState<string>('');\n\n  useEffect(() => {\n    let flag = false;\n    // console.log('props.validation.required', props.validation.required);\n    if ((props.validation.required as ValidationValueMessage).value) {\n      flag = true;\n    }\n    if (props.validation.required === true) {\n      flag = true;\n    }\n    if (flag) {\n      // console.log('Here select Name: ', props.name);\n      setValidation({\n        validate: (value: string) => {\n          if (value) {\n            return true;\n          } else {\n            return false;\n          }\n        },\n      });\n    }\n  }, [props.validation]);\n\n  useEffect(() => {\n    // No data: infinite loading\n    if (props.data?.length === 0 && !props.fetchDataFromUrl) {\n      // console.warn('MagicFormGenerator: nessuna opzione fornita per il Select');\n      return;\n    }\n\n    // Static data\n    if (props.data && props.data?.length > 0 && !props.fetchDataFromUrl) {\n      setOptionData(props.data as FieldSelectData[]);\n      setLoading(false);\n      return;\n    }\n\n    // Fetch data from url\n    if (props.fetchDataFromUrl) {\n      const fetchEffectData = async () => {\n        const res = await fetchData(props.fetchDataFromUrl as string);\n        if (res.status) {\n          setOptionData(res.data as FieldSelectData[]);\n          setLoading(false);\n        }\n        return res;\n      };\n\n      fetchEffectData();\n    }\n\n    // NB: If both data and url are set. Merge arrays:\n\n    // Dynamic data with fetch\n    // NB:\n    setOptionData(props.data as FieldSelectData[]);\n    const getDefaultValue = getSelectDefaultValue(\n      props.data as FieldSelectData[],\n    );\n    // console.log('getDefaultValue', getDefaultValue);\n    setDefaultValue(getDefaultValue);\n  }, [props.data]);\n\n  return (\n    <>\n      <div className=\"fg__select-wrapper\">\n        <select\n          id={props.id}\n          className={\n            'form-control ' +\n            'fg__input-select ' +\n            (errors[props.name] ? 'is-invalid ' : ' ')\n          }\n          name={props.name}\n          ref={register(validation)}\n          autoComplete={props.autocomplete ? props.autocomplete : 'off'}\n          disabled={loading}\n          defaultValue={defaultValue}\n        >\n          {props.placeholder ? (\n            <option value=\"\">{props.placeholder}</option>\n          ) : (\n            <></>\n          )}\n          {optionData.map((option: FieldSelectData, index: number) => {\n            return (\n              <option\n                key={index}\n                value={option.value}\n                disabled={option.disabled ? true : false}\n              >\n                {option.label}\n              </option>\n            );\n          })}\n        </select>\n        <div\n          className={\n            'loader ' + 'fg__input-select ' + (loading ? 'loader-active ' : ' ')\n          }\n        >\n          <span></span>\n        </div>\n      </div>\n      <div className=\"invalid-feedback\">\n        {errors[props.name]?.type == 'validate' ? (\n          <>\n            {(props?.validation?.required as ValidationValueMessage)\n              ?.message === '' ? (\n              <span>Selezionare un opzione</span>\n            ) : (\n              <span>\n                {\n                  (props?.validation?.required as ValidationValueMessage)\n                    ?.message\n                }\n              </span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n      </div>\n    </>\n  );\n};\n\n// validationMessage\nexport default InputSelect;\n","// Import core\nimport React, { ReactElement, useEffect, useState } from 'react';\n\n// Import third parts\nimport { useFormContext } from 'react-hook-form';\n\n// Import custom\nimport { FieldBase, FieldValidation, ValidationValueMessage } from '../types';\n\nexport const InputText: React.FC<FieldBase> = (\n  props: FieldBase,\n): ReactElement => {\n  // const [invalid, setInvalid] = useState<boolean>(true);\n\n  const { register, errors, watch, setError, clearErrors } = useFormContext(); // retrieve all hook methods\n\n  const [validation, setValidation] = useState<FieldValidation>({});\n  const [minLength, setMinLength] = useState<number>(0);\n  const [maxLength, setMaxLength] = useState<number>(0);\n\n  // Build Validation Object\n  useEffect(() => {\n    // Copy reference props\n    const rawValidation = props.validation;\n\n    // If exists set minLength state for error message\n    if (props.validation.minLength) {\n      if ((props.validation.minLength as ValidationValueMessage).value) {\n        setMinLength(\n          parseInt(\n            (props.validation.minLength as ValidationValueMessage)\n              .value as string,\n          ),\n        );\n      } else {\n        setMinLength(parseInt(props.validation.minLength as string));\n      }\n    }\n\n    // If exists set maxLength state for error message\n    if (props.validation.maxLength) {\n      if ((props.validation.maxLength as ValidationValueMessage).value) {\n        setMaxLength(\n          parseInt(\n            (props.validation.maxLength as ValidationValueMessage)\n              .value as string,\n          ),\n        );\n      } else {\n        setMaxLength(parseInt(props.validation.maxLength as string));\n      }\n    }\n\n    // Normalize equalTo validation with validate method\n    if (\n      props.validation.equalTo !== undefined &&\n      (props.validation.equalTo as ValidationValueMessage).value\n    ) {\n      const equalToField = (props.validation.equalTo as ValidationValueMessage)\n        .value as string;\n      rawValidation.validate = (value: string) => value === watch(equalToField);\n    }\n\n    // Add regex for validate email pattern\n    setValidation(rawValidation);\n  }, []);\n\n  // Update error object message for equalTo\n  useEffect(() => {\n    if (\n      errors[props.name]?.type == 'validate' &&\n      (props.validation.equalTo as ValidationValueMessage).value\n    ) {\n      setError('repeatEmail', {\n        type: 'equalTo',\n        message: 'I due indirizzi email devono coincidere',\n      });\n      clearErrors('validate');\n    }\n  }, [errors]);\n\n  return (\n    <>\n      <input\n        id={props.id}\n        type=\"text\"\n        className={'form-control ' + (errors[props.name] ? 'is-invalid ' : ' ')}\n        placeholder={props.placeholder}\n        name={props.name}\n        autoComplete={props.autocomplete ? props.autocomplete : 'off'}\n        ref={register(validation)}\n      />\n      <div className=\"invalid-feedback\">\n        {errors[props.name]?.type == 'required' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>Il campo è richiesto</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'minLength' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>La lunghezza minima è {minLength} caratteri</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'maxLength' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>La lunghezza massima è {maxLength} caratteri</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'pattern' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>Rispettare le regole di formattazione</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'validate' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>Rispettare le regole di validazione</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'equalTo' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>I due campi devono essere uguali</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n      </div>\n    </>\n  );\n};\n\n// validationMessage\nexport default InputText;\n","// Import core\nimport React, { ReactElement, useEffect, useState } from 'react';\n\n// Import third parts\nimport { useFormContext } from 'react-hook-form';\n\n// Import custom\nimport { FieldBase, FieldValidation, ValidationValueMessage } from '../types';\n\nexport const InputTextarea: React.FC<FieldBase> = (\n  props: FieldBase,\n): ReactElement => {\n  const { register, errors, watch, setError, clearErrors } = useFormContext(); // retrieve all hook methods\n  const [validation, setValidation] = useState<FieldValidation>({});\n  const [minLength, setMinLength] = useState<number>(0);\n  const [maxLength, setMaxLength] = useState<number>(0);\n\n  // Build Validation Object\n  useEffect(() => {\n    // Copy reference props\n    const rawValidation = props.validation;\n\n    // If exists set minLength state for error message\n    if (props.validation.minLength) {\n      if ((props.validation.minLength as ValidationValueMessage).value) {\n        setMinLength(\n          parseInt(\n            (props.validation.minLength as ValidationValueMessage)\n              .value as string,\n          ),\n        );\n      } else {\n        setMinLength(parseInt(props.validation.minLength as string));\n      }\n    }\n\n    // If exists set maxLength state for error message\n    if (props.validation.maxLength) {\n      if ((props.validation.maxLength as ValidationValueMessage).value) {\n        setMaxLength(\n          parseInt(\n            (props.validation.maxLength as ValidationValueMessage)\n              .value as string,\n          ),\n        );\n      } else {\n        setMaxLength(parseInt(props.validation.maxLength as string));\n      }\n    }\n\n    // Normalize equalTo validation with validate method\n    if (\n      props.validation.equalTo !== undefined &&\n      (props.validation.equalTo as ValidationValueMessage).value\n    ) {\n      const equalToField = (props.validation.equalTo as ValidationValueMessage)\n        .value as string;\n      rawValidation.validate = (value: string) => value === watch(equalToField);\n    }\n\n    // Add regex for validate email pattern\n    setValidation(rawValidation);\n  }, []);\n\n  // Update error object message for equalTo\n  useEffect(() => {\n    if (\n      errors[props.name]?.type == 'validate' &&\n      (props.validation.equalTo as ValidationValueMessage).value\n    ) {\n      setError('repeatEmail', {\n        type: 'equalTo',\n        message: 'I due campi devono coincidere',\n      });\n      clearErrors('validate');\n    }\n  }, [errors]);\n\n  return (\n    <>\n      <textarea\n        id={props.id}\n        className={'form-control ' + (errors[props.name] ? 'is-invalid ' : ' ')}\n        placeholder={props.placeholder}\n        name={props.name}\n        autoComplete={props.autocomplete ? props.autocomplete : 'off'}\n        ref={register(validation)}\n      />\n      <div className=\"invalid-feedback\">\n        {errors[props.name]?.type == 'required' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>Il campo è richiesto</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'minLength' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>La lunghezza minima è {minLength} caratteri</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'maxLength' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>La lunghezza massima è {maxLength} caratteri</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'pattern' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>Rispettare le regole di formattazione</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'validate' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>Rispettare le regole di validazione</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'equalTo' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>I due campi devono essere uguali</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n      </div>\n    </>\n  );\n};\n\n// validationMessage\nexport default InputTextarea;\n","// Import core\nimport React, { ReactElement, useEffect, useState } from 'react';\n\n// Import third parts\n\n// Import custom\nimport InputCheckbox from './fields/InputCheckbox';\nimport InputEmail from './fields/InputEmail';\nimport InputPassword from './fields/InputPassword';\nimport InputSelect from './fields/InputSelect';\nimport InputText from './fields/InputText';\nimport InputTextarea from './fields/InputTextarea';\nimport { getLayoutColClass, getLayoutValue } from './Helpers';\nimport { Field, FormFieldsProps } from './types';\n\nexport const FormFields: React.FC<FormFieldsProps> = (\n  props: FormFieldsProps,\n): ReactElement => {\n  const { fields } = props;\n\n  const [rowFields, setRowFields] = useState<[Field[]] | null>(null);\n\n  useEffect(() => {\n    const row: any[] = [];\n    let val = 0;\n    let fieldsTemp: any[] = [];\n    fields.map((field: Field, index: number) => {\n      let fieldLayout = '';\n      if (!field.layout) {\n        fieldLayout = '1/2';\n      } else {\n        fieldLayout = field.layout;\n      }\n      const currentVal: number = getLayoutValue(fieldLayout);\n      val = val + currentVal;\n      fieldsTemp.push(field);\n      if (index > 0) {\n        const nextFieldVal: number = getLayoutValue(\n          fields[index - 1].layout as string,\n        );\n        if (val < 1 && val + nextFieldVal > 1) {\n          val = val + 1;\n        }\n      }\n      if (val >= 1) {\n        row.push(fieldsTemp);\n        fieldsTemp = [];\n        val = 0;\n      }\n      if (index === fields.length - 1) {\n        row.push(fieldsTemp);\n      }\n    });\n\n    setRowFields(row as [Field[]]);\n  }, []);\n\n  return (\n    <div className=\"fg__fields fg__body\">\n      {rowFields &&\n        rowFields.map(\n          (fields: Field[], index: number): ReactElement => {\n            return (\n              <div className=\"row\" key={index}>\n                {fields.map((field: Field, index: number) => {\n                  const colName = getLayoutColClass(field.layout as string);\n                  return (\n                    <div className={colName} key={index}>\n                      <div className=\"fg__fields-field\">\n                        <>\n                          {field.type == 'text' ? (\n                            <InputText\n                              name={field.name}\n                              id={field.id}\n                              placeholder={field.placeholder}\n                              validation={field.validation}\n                              autocomplete={field.autocomplete}\n                              label={field.label}\n                            />\n                          ) : (\n                            <></>\n                          )}\n                          {field.type == 'email' ? (\n                            <>\n                              <label>{field.label}</label>\n                              <InputEmail\n                                name={field.name}\n                                id={field.id}\n                                placeholder={field.placeholder}\n                                validation={field.validation}\n                                autocomplete={field.autocomplete}\n                              />\n                            </>\n                          ) : (\n                            <></>\n                          )}\n                          {field.type == 'password' ? (\n                            <>\n                              <label>{field.label}</label>\n                              <InputPassword\n                                name={field.name}\n                                id={field.id}\n                                placeholder={field.placeholder}\n                                validation={field.validation}\n                                autocomplete={field.autocomplete}\n                              />\n                            </>\n                          ) : (\n                            <></>\n                          )}\n                          {field.type == 'select' ? (\n                            <>\n                              <label>{field.label}</label>\n                              <InputSelect\n                                name={field.name}\n                                id={field.id}\n                                placeholder={field.placeholder}\n                                validation={field.validation}\n                                autocomplete={field.autocomplete}\n                                data={field.data}\n                                fetchDataFromUrl={field.fetchDataFromUrl}\n                              />\n                            </>\n                          ) : (\n                            <></>\n                          )}\n                          {field.type == 'textarea' ? (\n                            <>\n                              <label>{field.label}</label>\n                              <InputTextarea\n                                name={field.name}\n                                id={field.id}\n                                placeholder={field.placeholder}\n                                validation={field.validation}\n                                autocomplete={field.autocomplete}\n                              />\n                            </>\n                          ) : (\n                            <></>\n                          )}\n                          {field.type == 'checkbox' ? (\n                            <>\n                              <label>{field.label}</label>\n                              <InputCheckbox\n                                name={field.name}\n                                id={field.id}\n                                placeholder={field.placeholder}\n                                validation={field.validation}\n                                autocomplete={field.autocomplete}\n                              />\n                            </>\n                          ) : (\n                            <></>\n                          )}\n                        </>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            );\n          },\n        )}\n    </div>\n  );\n};\n","import React, { ReactElement } from 'react';\nimport { FormHeadingProps } from './types';\n\nexport const FormHeading: React.FC<FormHeadingProps> = (\n  props: FormHeadingProps,\n): ReactElement => {\n  const { title, subTitle } = props;\n\n  const newLine = (string: string): JSX.Element[] => {\n    if (!string) {\n      return [<></>];\n    }\n    const ret = string\n      .split('\\n')\n      .map((str: string, index: number) => <p key={index}>{str}</p>);\n    return ret;\n  };\n\n  if (title === '' && subTitle === '') {\n    return <></>;\n  }\n\n  if (title === '') {\n    return (\n      <div className=\"row\">\n        <h3 className=\"fg__subtitle\">{newLine(subTitle as string)}</h3>\n      </div>\n    );\n  }\n\n  if (subTitle === '') {\n    return (\n      <div className=\"row\">\n        <h3 className=\"fg__title\">{title}</h3>\n      </div>\n    );\n  }\n\n  return (\n    <header>\n      <h3 className=\"fg__title\">{title}</h3>\n      <p className=\"fg__subtitle\">{subTitle}</p>\n    </header>\n  );\n};\n\nexport default FormHeading;\n","// Core\nimport React, { ReactElement, useEffect, useState } from 'react';\n\n// Third packages\n// import { useForm, FormProvider, useFormContext } from \"react-hook-form\";\n\n// Custom package\nimport { getLayoutColClass } from './Helpers';\nimport { ButtonSubmit } from './types';\nconst FormButonSubmit: React.FC<ButtonSubmit> = (\n  props: ButtonSubmit,\n): ReactElement => {\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    setLoading(true);\n  }, [loading]);\n\n  const rowClass = getLayoutColClass(props?.layout ? props.layout : '1/4');\n  const btnText = props?.text ? props.text : 'Invia';\n  const btnClasses = 'fg__button-submit ' + props?.class ? props.class : ' ';\n  const btnId = props?.id ? props.id : '';\n\n  return (\n    <div className=\"row\">\n      <div className={rowClass}>\n        <div\n          className={\n            'fg__button-submit-wrapper ' + (loading ? 'with-loader ' : ' ')\n          }\n        >\n          {!props?.dom ? (\n            <input\n              type=\"submit\"\n              id={btnId}\n              className={btnClasses}\n              value={btnText}\n            />\n          ) : (\n            <></>\n          )}\n          {props?.dom && props.dom == 'input' ? (\n            <input\n              type=\"submit\"\n              id={btnId}\n              className={btnClasses}\n              value={btnText}\n            />\n          ) : (\n            <></>\n          )}\n          {props?.dom && props.dom == 'button' ? (\n            <button type=\"submit\" id={btnId} className={btnClasses}>\n              {btnText}\n            </button>\n          ) : (\n            <></>\n          )}\n          {props?.loading == false ? (\n            <></>\n          ) : (\n            <div className={'loader ' + (loading ? 'loader-active ' : ' ')}>\n              <span></span>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormButonSubmit;\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { ReactElement, useCallback } from 'react';\n\n// Third packages\nimport { useForm, FormProvider } from 'react-hook-form';\n\n// Custom packages\nimport { FormFields } from './FormFields';\nimport { FormHeading } from './FormHeading';\nimport FormButonSubmit from './FormButtonSubmit';\nimport { onSubmitBackendCall } from './Helpers';\n\n// Import styles - With rollup add this as external in package.json\nimport './scss/styles.scss';\nimport { MagicFormGeneratorProps } from './types';\n\nexport const MagicFormGenerator: React.FC<MagicFormGeneratorProps> = (\n  props: MagicFormGeneratorProps,\n): ReactElement => {\n  const { form } = props;\n  const { submit, buttonSubmit } = form;\n\n  // const [loading, setLoading] = useState<boolean>(false);\n\n  const methods = useForm();\n\n  // NB: Visto che la callback del form è sempre uguale posso memorizzarla\n  const handleSubmit = useCallback(async (data: any) => {\n    // If callbck exists edit data in callback\n    const dataBeforeSubmit = submit.onSubmit ? submit.onSubmit(data) : data;\n\n    // If submitbackend is enabled send ajax data\n    if (submit.backend) {\n      // const res =\n      await onSubmitBackendCall(\n        submit.endpoint,\n        submit.method,\n        dataBeforeSubmit,\n      );\n    }\n  }, []);\n\n  return (\n    <FormProvider {...methods}>\n      <div id=\"MagicFormGenerator\">\n        <form onSubmit={methods.handleSubmit(handleSubmit)} noValidate>\n          <FormHeading title={form.title} subTitle={form.subTitle} />\n          <FormFields fields={form.fields} />\n          <FormButonSubmit {...buttonSubmit} />\n        </form>\n      </div>\n    </FormProvider>\n  );\n};\n\nexport default MagicFormGenerator;\n"],"names":["useFormContext","useState","useEffect","React","useForm","useCallback","FormProvider"],"mappings":"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"}