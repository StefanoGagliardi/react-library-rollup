{"version":3,"file":"index.ie11.production.min.js","sources":["../node_modules/tslib/tslib.es6.js","../src/fields/InputCheckbox.tsx","../src/fields/InputEmail.tsx","../src/fields/InputPassword.tsx","../src/Helpers.ts","../src/fields/InputSelect.tsx","../src/fields/InputText.tsx","../src/fields/InputTextarea.tsx","../src/FormFields.tsx","../src/FormHeading.tsx","../src/FormButtonSubmit.tsx","../node_modules/style-inject/dist/style-inject.es.js","../src/MagicFormGenerator.tsx"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","// Import core\nimport React, { ReactElement, useEffect, useState } from 'react';\n\n// Import third parts\nimport { useFormContext } from 'react-hook-form';\nimport { FieldBase, FieldValidation } from '../types';\n\n// Import custom\n\nexport const InputCheckbox: React.FC<FieldBase> = (\n  props: FieldBase,\n): ReactElement => {\n  // const [invalid, setInvalid] = useState<boolean>(true);\n\n  const { register, errors, setValue, trigger } = useFormContext(); // retrieve all hook methods\n  const [validation, setValidation] = useState<FieldValidation>({});\n  const [checkboxValue, setCheckboxValue] = useState<boolean>(false);\n\n  // Build Validation Object\n  useEffect(() => {\n    // Copy reference props\n    const rawValidation = props.validation;\n\n    // Add regex for validate email pattern\n    setValidation(rawValidation);\n  }, []);\n\n  const handleCheckboxValue = () => {\n    // console.log('!checkboxValue', !checkboxValue);\n    setValue(props.name, !checkboxValue);\n\n    setCheckboxValue(!checkboxValue);\n    trigger();\n  };\n\n  return (\n    <>\n      <div className=\"fg__checkbox-wrapper\">\n        <input\n          id={props.id}\n          type=\"checkbox\"\n          className={\n            'form-control ' + (errors[props.name] ? 'is-invalid ' : ' ')\n          }\n          name={props.name}\n          checked={checkboxValue}\n          onChange={(_value: any) => {\n            // console.log('Checkbox onChange value:', value);\n          }}\n          autoComplete={props.autocomplete ? props.autocomplete : 'off'}\n          ref={register(validation)}\n        />\n        <span className=\"checkmark\" onClick={handleCheckboxValue}></span>\n        <div\n          className=\"fg__checkbox-text\"\n          dangerouslySetInnerHTML={{ __html: props.placeholder as string }}\n        />\n      </div>\n      <div className=\"invalid-feedback\">\n        {errors[props.name]?.type == 'required' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>Il campo è richiesto</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n      </div>\n    </>\n  );\n};\n\n// validationMessage\nexport default InputCheckbox;\n","// Import core\nimport React, { ReactElement, useEffect, useState } from 'react';\n\n// Import third parts\nimport { useFormContext } from 'react-hook-form';\n\n// Import custom\nimport { FieldBase, FieldValidation, ValidationValueMessage } from '../types';\n\n// Ract.FC<InputEmailProps>\nexport const InputEmail: React.FC<FieldBase> = (\n  props: FieldBase,\n): ReactElement => {\n  // const [invalid, setInvalid] = useState<boolean>(true);\n\n  const { register, errors, watch, setError, clearErrors } = useFormContext(); // retrieve all hook methods\n  const [validation, setValidation] = useState<FieldValidation>({});\n  const [minLength, setMinLength] = useState<number>(0);\n  const [maxLength, setMaxLength] = useState<number>(0);\n\n  // Build Validation Object\n  useEffect(() => {\n    // Copy reference props\n    const rawValidation = props.validation;\n\n    // If exists set minLength state for error message\n    if (props.validation.minLength) {\n      if ((props.validation.minLength as ValidationValueMessage).value) {\n        setMinLength(\n          parseInt(\n            (props.validation.minLength as ValidationValueMessage)\n              .value as string,\n          ),\n        );\n      } else {\n        setMinLength(parseInt(props.validation.minLength as string));\n      }\n    }\n\n    // If exists set maxLength state for error message\n    if (props.validation.maxLength) {\n      if ((props.validation.maxLength as ValidationValueMessage).value) {\n        setMaxLength(\n          parseInt(\n            (props.validation.maxLength as ValidationValueMessage)\n              .value as string,\n          ),\n        );\n      } else {\n        setMaxLength(parseInt(props.validation.maxLength as string));\n      }\n    }\n\n    // Normalize equalTo validation with validate method\n    if (\n      props.validation.equalTo !== undefined &&\n      (props.validation.equalTo as ValidationValueMessage).value\n    ) {\n      const equalToField = (props.validation.equalTo as ValidationValueMessage)\n        .value as string;\n      rawValidation.validate = (value: string) => value === watch(equalToField);\n    }\n\n    // Add regex for validate email pattern\n    setValidation({\n      ...rawValidation,\n      pattern: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\n    });\n  }, []);\n\n  // Update error object message for equalTo\n  useEffect(() => {\n    // console.log('useEFfect errors: ', errors);\n    if (\n      errors[props.name]?.type == 'validate' &&\n      (props.validation.equalTo as ValidationValueMessage).value\n    ) {\n      // console.log('useEFfect errors: ', errors);\n      setError('repeatEmail', {\n        type: 'equalTo',\n        message: 'I due indirizzi email devono coincidere',\n      });\n      clearErrors('validate');\n    }\n  }, [errors]);\n\n  return (\n    <>\n      <input\n        id={props.id}\n        type=\"email\"\n        className={'form-control ' + (errors[props.name] ? 'is-invalid ' : ' ')}\n        placeholder={props.placeholder}\n        name={props.name}\n        autoComplete={props.autocomplete ? props.autocomplete : 'off'}\n        ref={register(validation)}\n      />\n      <div className=\"invalid-feedback\">\n        {errors[props.name]?.type == 'required' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>Il campo email è richiesto</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'minLength' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>La lunghezza minima è {minLength} caratteri</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'maxLength' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>La lunghezza massima è {maxLength} caratteri</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'pattern' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>Inserire un&aposindirizzo email valido</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'validate' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>Rispettare le regole di validazione</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'equalTo' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>I due campi devono essere uguali</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n      </div>\n    </>\n  );\n};\n\n// errors[props.name] && <span>Il campo è richiesto</span>\n\nexport default InputEmail;\n","// Import core\nimport React, { ReactElement, useEffect, useState } from 'react';\n\n// Import third parts\nimport { useFormContext, ValidationValueMessage } from 'react-hook-form';\n\n// Import custom\nimport { FieldBase, FieldValidation } from '../types';\n\nexport const InputPassword: React.FC<FieldBase> = (\n  props: FieldBase,\n): ReactElement => {\n  // const [invalid, setInvalid] = useState<boolean>(true);\n\n  const { register, errors, watch } = useFormContext(); // retrieve all hook methods\n\n  const [validation, setValidation] = useState<FieldValidation>({});\n  const [minLength, setMinLength] = useState<number>(0);\n  const [maxLength, setMaxLength] = useState<number>(0);\n\n  // Build Validation Object\n  // TODO Fare un custom hook per uesta serie di operazioni?\n  useEffect(() => {\n    // Copy reference props\n    const rawValidation = props.validation;\n\n    // If exists set minLength state for error message\n    if (props.validation.minLength) {\n      if ((props.validation.minLength as ValidationValueMessage).value) {\n        setMinLength(\n          parseInt(\n            (props.validation.minLength as ValidationValueMessage)\n              .value as string,\n          ),\n        );\n      } else {\n        setMinLength(parseInt(props.validation.minLength as string));\n      }\n    }\n\n    // If exists set maxLength state for error  message\n    if (props.validation.maxLength) {\n      if ((props.validation.maxLength as ValidationValueMessage).value) {\n        setMaxLength(\n          parseInt(\n            (props.validation.maxLength as ValidationValueMessage)\n              .value as string,\n          ),\n        );\n      } else {\n        setMaxLength(parseInt(props.validation.maxLength as string));\n      }\n    }\n\n    // Normalize equalTo validation with validate method\n    if (\n      props.validation.equalTo !== undefined &&\n      (props.validation.equalTo as ValidationValueMessage).value\n    ) {\n      const equalToField = (props.validation.equalTo as ValidationValueMessage)\n        .value as string;\n      rawValidation.validate = (value: string) => value === watch(equalToField);\n    }\n\n    // Add regex for validate email pattern\n    setValidation({\n      ...rawValidation,\n    });\n  }, []);\n\n  return (\n    <>\n      <input\n        id={props.id}\n        type=\"password\"\n        className={'form-control ' + (errors[props.name] ? 'is-invalid ' : ' ')}\n        placeholder={props.placeholder}\n        name={props.name}\n        autoComplete={props.autocomplete ? props.autocomplete : 'off'}\n        ref={register(validation)}\n      />\n      <div className=\"invalid-feedback\">\n        {errors[props.name]?.type == 'required' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>Il campo password è richiesto</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'minLength' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>La lunghezza minima è {minLength} caratteri</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'maxLength' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>La lunghezza massima è {maxLength} caratteri</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'pattern' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>Rispettare le regole di formattazione</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'validate' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>Rispettare le regole di validazione</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'equalTo' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>I due campi devono essere uguali</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n      </div>\n    </>\n  );\n};\n\n// validationMessage\nexport default InputPassword;\n","import { FieldSelectData } from './types';\ninterface MessageDefault {\n  required: string;\n  minLength: string;\n  maxLength: string;\n  pattern: string;\n}\nexport const validationMessage: MessageDefault = {\n  required: 'Il campo {fieldName} è richiesto',\n  minLength: 'La lunghezza minima è {min} caratteri',\n  maxLength: 'La lunghezza massima è {max} caratteri',\n  pattern: 'Rispettare le regole di fomattazione',\n};\n\n// Get layout class by props\nexport const getLayoutValue = (layout: string): number => {\n  switch (layout) {\n    case '1':\n      return 1;\n    case '1/2':\n      return 0.5;\n    case '1/3':\n      return 0.33;\n    case '1/4':\n      return 0.25;\n    default:\n      return 1;\n  }\n};\n\nexport const getLayoutColClass = (layout: string): string => {\n  switch (layout) {\n    case '1':\n      return 'fg__col-full';\n    case '1/2':\n      return 'fg__col-half';\n    case '1/3':\n      return 'fg__col-third';\n    case '1/4':\n      return 'fg__col-fourth';\n    default:\n      return 'fg__col-full';\n  }\n};\n\n// Get default value from Select option list and return value\nexport const getSelectDefaultValue = (_data: FieldSelectData[]): string => {\n  return 'CO';\n};\n\ninterface Response {\n  status: boolean;\n  data: any;\n}\n\nexport const fetchData = async (url: string): Promise<Response> => {\n  const options: RequestInit = {};\n  try {\n    const response = await fetch(url, options);\n    const result = await response.json();\n    const res: Response = {\n      status: true,\n      data: result,\n    };\n    return res;\n  } catch (error) {\n    const response: Response = {\n      status: false,\n      data: [],\n    };\n    return response;\n  }\n};\n\nexport const onSubmitBackendCall = async (\n  url: string,\n  method: string,\n  data: any,\n): Promise<Response> => {\n  const getParams = new URLSearchParams(data);\n\n  let options: RequestInit = {};\n  if (method == 'GET') {\n    options = {\n      method: method,\n    };\n  } else {\n    options = {\n      method: method,\n      body: data,\n    };\n  }\n\n  try {\n    const response = await fetch(url + '?' + getParams, options);\n    const result = await response.json();\n    const res: Response = {\n      status: true,\n      data: result,\n    };\n    return res;\n  } catch (error) {\n    const response: Response = {\n      status: false,\n      data: [],\n    };\n    return response;\n  }\n};\n","// Import core\nimport React, { ReactElement, useEffect, useState } from 'react';\n\n// Import third parts\nimport { useFormContext } from 'react-hook-form';\n\n// Import custom\nimport {\n  FieldBase,\n  FieldSelectData,\n  FieldValidation,\n  ValidationValueMessage,\n} from '../types';\nimport { fetchData, getSelectDefaultValue } from '../Helpers';\n\nexport const InputSelect: React.FC<FieldBase> = (\n  props: FieldBase,\n): ReactElement => {\n  // Get <Select> data\n\n  // Form core\n  const { register, errors } = useFormContext(); // retrieve all hook methods\n\n  // State\n  const [validation, setValidation] = useState<FieldValidation>({});\n  const [loading, setLoading] = useState<boolean>(true);\n  const [optionData, setOptionData] = useState<FieldSelectData[]>([]);\n  const [defaultValue, setDefaultValue] = useState<string>('');\n\n  useEffect(() => {\n    let flag = false;\n    // console.log('props.validation.required', props.validation.required);\n    if ((props.validation.required as ValidationValueMessage).value) {\n      flag = true;\n    }\n    if (props.validation.required === true) {\n      flag = true;\n    }\n    if (flag) {\n      // console.log('Here select Name: ', props.name);\n      setValidation({\n        validate: (value: string) => {\n          if (value) {\n            return true;\n          } else {\n            return false;\n          }\n        },\n      });\n    }\n  }, [props.validation]);\n\n  useEffect(() => {\n    // No data: infinite loading\n    if (props.data?.length === 0 && !props.fetchDataFromUrl) {\n      // console.warn('MagicFormGenerator: nessuna opzione fornita per il Select');\n      return;\n    }\n\n    // Static data\n    if (props.data && props.data?.length > 0 && !props.fetchDataFromUrl) {\n      setOptionData(props.data as FieldSelectData[]);\n      setLoading(false);\n      return;\n    }\n\n    // Fetch data from url\n    if (props.fetchDataFromUrl) {\n      const fetchEffectData = async () => {\n        const res = await fetchData(props.fetchDataFromUrl as string);\n        if (res.status) {\n          setOptionData(res.data as FieldSelectData[]);\n          setLoading(false);\n        }\n        return res;\n      };\n\n      fetchEffectData();\n    }\n\n    // NB: If both data and url are set. Merge arrays:\n\n    // Dynamic data with fetch\n    // NB:\n    setOptionData(props.data as FieldSelectData[]);\n    const getDefaultValue = getSelectDefaultValue(\n      props.data as FieldSelectData[],\n    );\n    // console.log('getDefaultValue', getDefaultValue);\n    setDefaultValue(getDefaultValue);\n  }, [props.data]);\n\n  return (\n    <>\n      <div className=\"fg__select-wrapper\">\n        <select\n          id={props.id}\n          className={\n            'form-control ' +\n            'fg__input-select ' +\n            (errors[props.name] ? 'is-invalid ' : ' ')\n          }\n          name={props.name}\n          ref={register(validation)}\n          autoComplete={props.autocomplete ? props.autocomplete : 'off'}\n          disabled={loading}\n          defaultValue={defaultValue}\n        >\n          {props.placeholder ? (\n            <option value=\"\">{props.placeholder}</option>\n          ) : (\n            <></>\n          )}\n          {optionData.map((option: FieldSelectData, index: number) => {\n            return (\n              <option\n                key={index}\n                value={option.value}\n                disabled={option.disabled ? true : false}\n              >\n                {option.label}\n              </option>\n            );\n          })}\n        </select>\n        <div\n          className={\n            'loader ' + 'fg__input-select ' + (loading ? 'loader-active ' : ' ')\n          }\n        >\n          <span></span>\n        </div>\n      </div>\n      <div className=\"invalid-feedback\">\n        {errors[props.name]?.type == 'validate' ? (\n          <>\n            {(props?.validation?.required as ValidationValueMessage)\n              ?.message === '' ? (\n              <span>Selezionare un opzione</span>\n            ) : (\n              <span>\n                {\n                  (props?.validation?.required as ValidationValueMessage)\n                    ?.message\n                }\n              </span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n      </div>\n    </>\n  );\n};\n\n// validationMessage\nexport default InputSelect;\n","// Import core\nimport React, { ReactElement, useEffect, useState } from 'react';\n\n// Import third parts\nimport { useFormContext } from 'react-hook-form';\n\n// Import custom\nimport { FieldBase, FieldValidation, ValidationValueMessage } from '../types';\n\nexport const InputText: React.FC<FieldBase> = (\n  props: FieldBase,\n): ReactElement => {\n  // const [invalid, setInvalid] = useState<boolean>(true);\n\n  const { register, errors, watch, setError, clearErrors } = useFormContext(); // retrieve all hook methods\n\n  const [validation, setValidation] = useState<FieldValidation>({});\n  const [minLength, setMinLength] = useState<number>(0);\n  const [maxLength, setMaxLength] = useState<number>(0);\n\n  // Build Validation Object\n  useEffect(() => {\n    // Copy reference props\n    const rawValidation = props.validation;\n\n    // If exists set minLength state for error message\n    if (props.validation.minLength) {\n      if ((props.validation.minLength as ValidationValueMessage).value) {\n        setMinLength(\n          parseInt(\n            (props.validation.minLength as ValidationValueMessage)\n              .value as string,\n          ),\n        );\n      } else {\n        setMinLength(parseInt(props.validation.minLength as string));\n      }\n    }\n\n    // If exists set maxLength state for error message\n    if (props.validation.maxLength) {\n      if ((props.validation.maxLength as ValidationValueMessage).value) {\n        setMaxLength(\n          parseInt(\n            (props.validation.maxLength as ValidationValueMessage)\n              .value as string,\n          ),\n        );\n      } else {\n        setMaxLength(parseInt(props.validation.maxLength as string));\n      }\n    }\n\n    // Normalize equalTo validation with validate method\n    if (\n      props.validation.equalTo !== undefined &&\n      (props.validation.equalTo as ValidationValueMessage).value\n    ) {\n      const equalToField = (props.validation.equalTo as ValidationValueMessage)\n        .value as string;\n      rawValidation.validate = (value: string) => value === watch(equalToField);\n    }\n\n    // Add regex for validate email pattern\n    setValidation(rawValidation);\n  }, []);\n\n  // Update error object message for equalTo\n  useEffect(() => {\n    if (\n      errors[props.name]?.type == 'validate' &&\n      (props.validation.equalTo as ValidationValueMessage).value\n    ) {\n      setError('repeatEmail', {\n        type: 'equalTo',\n        message: 'I due indirizzi email devono coincidere',\n      });\n      clearErrors('validate');\n    }\n  }, [errors]);\n\n  return (\n    <>\n      <input\n        id={props.id}\n        type=\"text\"\n        className={'form-control ' + (errors[props.name] ? 'is-invalid ' : ' ')}\n        placeholder={props.placeholder}\n        name={props.name}\n        autoComplete={props.autocomplete ? props.autocomplete : 'off'}\n        ref={register(validation)}\n      />\n      <div className=\"invalid-feedback\">\n        {errors[props.name]?.type == 'required' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>Il campo è richiesto</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'minLength' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>La lunghezza minima è {minLength} caratteri</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'maxLength' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>La lunghezza massima è {maxLength} caratteri</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'pattern' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>Rispettare le regole di formattazione</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'validate' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>Rispettare le regole di validazione</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'equalTo' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>I due campi devono essere uguali</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n      </div>\n    </>\n  );\n};\n\n// validationMessage\nexport default InputText;\n","// Import core\nimport React, { ReactElement, useEffect, useState } from 'react';\n\n// Import third parts\nimport { useFormContext } from 'react-hook-form';\n\n// Import custom\nimport { FieldBase, FieldValidation, ValidationValueMessage } from '../types';\n\nexport const InputTextarea: React.FC<FieldBase> = (\n  props: FieldBase,\n): ReactElement => {\n  const { register, errors, watch, setError, clearErrors } = useFormContext(); // retrieve all hook methods\n  const [validation, setValidation] = useState<FieldValidation>({});\n  const [minLength, setMinLength] = useState<number>(0);\n  const [maxLength, setMaxLength] = useState<number>(0);\n\n  // Build Validation Object\n  useEffect(() => {\n    // Copy reference props\n    const rawValidation = props.validation;\n\n    // If exists set minLength state for error message\n    if (props.validation.minLength) {\n      if ((props.validation.minLength as ValidationValueMessage).value) {\n        setMinLength(\n          parseInt(\n            (props.validation.minLength as ValidationValueMessage)\n              .value as string,\n          ),\n        );\n      } else {\n        setMinLength(parseInt(props.validation.minLength as string));\n      }\n    }\n\n    // If exists set maxLength state for error message\n    if (props.validation.maxLength) {\n      if ((props.validation.maxLength as ValidationValueMessage).value) {\n        setMaxLength(\n          parseInt(\n            (props.validation.maxLength as ValidationValueMessage)\n              .value as string,\n          ),\n        );\n      } else {\n        setMaxLength(parseInt(props.validation.maxLength as string));\n      }\n    }\n\n    // Normalize equalTo validation with validate method\n    if (\n      props.validation.equalTo !== undefined &&\n      (props.validation.equalTo as ValidationValueMessage).value\n    ) {\n      const equalToField = (props.validation.equalTo as ValidationValueMessage)\n        .value as string;\n      rawValidation.validate = (value: string) => value === watch(equalToField);\n    }\n\n    // Add regex for validate email pattern\n    setValidation(rawValidation);\n  }, []);\n\n  // Update error object message for equalTo\n  useEffect(() => {\n    if (\n      errors[props.name]?.type == 'validate' &&\n      (props.validation.equalTo as ValidationValueMessage).value\n    ) {\n      setError('repeatEmail', {\n        type: 'equalTo',\n        message: 'I due campi devono coincidere',\n      });\n      clearErrors('validate');\n    }\n  }, [errors]);\n\n  return (\n    <>\n      <textarea\n        id={props.id}\n        className={'form-control ' + (errors[props.name] ? 'is-invalid ' : ' ')}\n        placeholder={props.placeholder}\n        name={props.name}\n        autoComplete={props.autocomplete ? props.autocomplete : 'off'}\n        ref={register(validation)}\n      />\n      <div className=\"invalid-feedback\">\n        {errors[props.name]?.type == 'required' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>Il campo è richiesto</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'minLength' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>La lunghezza minima è {minLength} caratteri</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'maxLength' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>La lunghezza massima è {maxLength} caratteri</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'pattern' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>Rispettare le regole di formattazione</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'validate' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>Rispettare le regole di validazione</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n        {errors[props.name]?.type == 'equalTo' ? (\n          <>\n            {errors[props.name]?.message === '' ? (\n              <span>I due campi devono essere uguali</span>\n            ) : (\n              <span>{errors[props.name]?.message}</span>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n      </div>\n    </>\n  );\n};\n\n// validationMessage\nexport default InputTextarea;\n","// Import core\nimport React, { ReactElement, useEffect, useState } from 'react';\n\n// Import third parts\n\n// Import custom\nimport InputCheckbox from './fields/InputCheckbox';\nimport InputEmail from './fields/InputEmail';\nimport InputPassword from './fields/InputPassword';\nimport InputSelect from './fields/InputSelect';\nimport InputText from './fields/InputText';\nimport InputTextarea from './fields/InputTextarea';\nimport { getLayoutColClass, getLayoutValue } from './Helpers';\nimport { Field, FormFieldsProps } from './types';\n\nexport const FormFields: React.FC<FormFieldsProps> = (\n  props: FormFieldsProps,\n): ReactElement => {\n  const { fields } = props;\n\n  const [rowFields, setRowFields] = useState<[Field[]] | null>(null);\n\n  useEffect(() => {\n    const row: any[] = [];\n    let val = 0;\n    let fieldsTemp: any[] = [];\n    fields.map((field: Field, index: number) => {\n      let fieldLayout = '';\n      if (!field.layout) {\n        fieldLayout = '1/2';\n      } else {\n        fieldLayout = field.layout;\n      }\n      const currentVal: number = getLayoutValue(fieldLayout);\n      val = val + currentVal;\n      fieldsTemp.push(field);\n      if (index > 0) {\n        const nextFieldVal: number = getLayoutValue(\n          fields[index - 1].layout as string,\n        );\n        if (val < 1 && val + nextFieldVal > 1) {\n          val = val + 1;\n        }\n      }\n      if (val >= 1) {\n        row.push(fieldsTemp);\n        fieldsTemp = [];\n        val = 0;\n      }\n      if (index === fields.length - 1) {\n        row.push(fieldsTemp);\n      }\n    });\n\n    setRowFields(row as [Field[]]);\n  }, []);\n\n  return (\n    <div className=\"fg__fields fg__body\">\n      {rowFields &&\n        rowFields.map(\n          (fields: Field[], index: number): ReactElement => {\n            return (\n              <div className=\"row\" key={index}>\n                {fields.map((field: Field, index: number) => {\n                  const colName = getLayoutColClass(field.layout as string);\n                  return (\n                    <div className={colName} key={index}>\n                      <div className=\"fg__fields-field\">\n                        <>\n                          {field.type == 'text' ? (\n                            <InputText\n                              name={field.name}\n                              id={field.id}\n                              placeholder={field.placeholder}\n                              validation={field.validation}\n                              autocomplete={field.autocomplete}\n                              label={field.label}\n                            />\n                          ) : (\n                            <></>\n                          )}\n                          {field.type == 'email' ? (\n                            <>\n                              <label>{field.label}</label>\n                              <InputEmail\n                                name={field.name}\n                                id={field.id}\n                                placeholder={field.placeholder}\n                                validation={field.validation}\n                                autocomplete={field.autocomplete}\n                              />\n                            </>\n                          ) : (\n                            <></>\n                          )}\n                          {field.type == 'password' ? (\n                            <>\n                              <label>{field.label}</label>\n                              <InputPassword\n                                name={field.name}\n                                id={field.id}\n                                placeholder={field.placeholder}\n                                validation={field.validation}\n                                autocomplete={field.autocomplete}\n                              />\n                            </>\n                          ) : (\n                            <></>\n                          )}\n                          {field.type == 'select' ? (\n                            <>\n                              <label>{field.label}</label>\n                              <InputSelect\n                                name={field.name}\n                                id={field.id}\n                                placeholder={field.placeholder}\n                                validation={field.validation}\n                                autocomplete={field.autocomplete}\n                                data={field.data}\n                                fetchDataFromUrl={field.fetchDataFromUrl}\n                              />\n                            </>\n                          ) : (\n                            <></>\n                          )}\n                          {field.type == 'textarea' ? (\n                            <>\n                              <label>{field.label}</label>\n                              <InputTextarea\n                                name={field.name}\n                                id={field.id}\n                                placeholder={field.placeholder}\n                                validation={field.validation}\n                                autocomplete={field.autocomplete}\n                              />\n                            </>\n                          ) : (\n                            <></>\n                          )}\n                          {field.type == 'checkbox' ? (\n                            <>\n                              <label>{field.label}</label>\n                              <InputCheckbox\n                                name={field.name}\n                                id={field.id}\n                                placeholder={field.placeholder}\n                                validation={field.validation}\n                                autocomplete={field.autocomplete}\n                              />\n                            </>\n                          ) : (\n                            <></>\n                          )}\n                        </>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            );\n          },\n        )}\n    </div>\n  );\n};\n","import React, { ReactElement } from 'react';\nimport { FormHeadingProps } from './types';\n\nexport const FormHeading: React.FC<FormHeadingProps> = (\n  props: FormHeadingProps,\n): ReactElement => {\n  const { title, subTitle } = props;\n\n  const newLine = (string: string): JSX.Element[] => {\n    if (!string) {\n      return [<></>];\n    }\n    const ret = string\n      .split('\\n')\n      .map((str: string, index: number) => <p key={index}>{str}</p>);\n    return ret;\n  };\n\n  if (title === '' && subTitle === '') {\n    return <></>;\n  }\n\n  if (title === '') {\n    return (\n      <div className=\"row\">\n        <h3 className=\"fg__subtitle\">{newLine(subTitle as string)}</h3>\n      </div>\n    );\n  }\n\n  if (subTitle === '') {\n    return (\n      <div className=\"row\">\n        <h3 className=\"fg__title\">{title}</h3>\n      </div>\n    );\n  }\n\n  return (\n    <header>\n      <h3 className=\"fg__title\">{title}</h3>\n      <p className=\"fg__subtitle\">{subTitle}</p>\n    </header>\n  );\n};\n\nexport default FormHeading;\n","// Core\nimport React, { ReactElement, useEffect, useState } from 'react';\n\n// Third packages\n// import { useForm, FormProvider, useFormContext } from \"react-hook-form\";\n\n// Custom package\nimport { getLayoutColClass } from './Helpers';\nimport { ButtonSubmit } from './types';\nconst FormButonSubmit: React.FC<ButtonSubmit> = (\n  props: ButtonSubmit,\n): ReactElement => {\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    setLoading(true);\n  }, [loading]);\n\n  const rowClass = getLayoutColClass(props?.layout ? props.layout : '1/4');\n  const btnText = props?.text ? props.text : 'Invia';\n  const btnClasses = 'fg__button-submit ' + props?.class ? props.class : ' ';\n  const btnId = props?.id ? props.id : '';\n\n  return (\n    <div className=\"row\">\n      <div className={rowClass}>\n        <div\n          className={\n            'fg__button-submit-wrapper ' + (loading ? 'with-loader ' : ' ')\n          }\n        >\n          {!props?.dom ? (\n            <input\n              type=\"submit\"\n              id={btnId}\n              className={btnClasses}\n              value={btnText}\n            />\n          ) : (\n            <></>\n          )}\n          {props?.dom && props.dom == 'input' ? (\n            <input\n              type=\"submit\"\n              id={btnId}\n              className={btnClasses}\n              value={btnText}\n            />\n          ) : (\n            <></>\n          )}\n          {props?.dom && props.dom == 'button' ? (\n            <button type=\"submit\" id={btnId} className={btnClasses}>\n              {btnText}\n            </button>\n          ) : (\n            <></>\n          )}\n          {props?.loading == false ? (\n            <></>\n          ) : (\n            <div className={'loader ' + (loading ? 'loader-active ' : ' ')}>\n              <span></span>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormButonSubmit;\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { ReactElement, useCallback } from 'react';\n\n// Third packages\nimport { useForm, FormProvider } from 'react-hook-form';\n\n// Custom packages\nimport { FormFields } from './FormFields';\nimport { FormHeading } from './FormHeading';\nimport FormButonSubmit from './FormButtonSubmit';\nimport { onSubmitBackendCall } from './Helpers';\n\n// Import styles - With rollup add this as external in package.json\nimport './scss/styles.scss';\nimport { MagicFormGeneratorProps } from './types';\n\nexport const MagicFormGenerator: React.FC<MagicFormGeneratorProps> = (\n  props: MagicFormGeneratorProps,\n): ReactElement => {\n  const { form } = props;\n  const { submit, buttonSubmit } = form;\n\n  // const [loading, setLoading] = useState<boolean>(false);\n\n  const methods = useForm();\n\n  // NB: Visto che la callback del form è sempre uguale posso memorizzarla\n  const handleSubmit = useCallback(async (data: any) => {\n    // If callbck exists edit data in callback\n    const dataBeforeSubmit = submit.onSubmit ? submit.onSubmit(data) : data;\n\n    // If submitbackend is enabled send ajax data\n    if (submit.backend) {\n      // const res =\n      await onSubmitBackendCall(\n        submit.endpoint,\n        submit.method,\n        dataBeforeSubmit,\n      );\n    }\n  }, []);\n\n  return (\n    <FormProvider {...methods}>\n      <div id=\"MagicFormGenerator\">\n        <form onSubmit={methods.handleSubmit(handleSubmit)} noValidate>\n          <FormHeading title={form.title} subTitle={form.subTitle} />\n          <FormFields fields={form.fields} />\n          <FormButonSubmit {...buttonSubmit} />\n        </form>\n      </div>\n    </FormProvider>\n  );\n};\n\nexport default MagicFormGenerator;\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__read","o","m","r","ar","error","InputCheckbox","props","_d","useFormContext","register","errors","setValue","trigger","_e","useState","validation","setValidation","_f","checkboxValue","setCheckboxValue","useEffect","rawValidation","React","className","id","type","name","checked","onChange","_value","autoComplete","autocomplete","ref","onClick","dangerouslySetInnerHTML","__html","placeholder","message","InputEmail","_u","watch","setError","clearErrors","_v","_w","minLength","setMinLength","_x","maxLength","setMaxLength","parseInt","undefined","equalTo","equalToField_1","validate","pattern","InputPassword","getLayoutValue","layout","getLayoutColClass","onSubmitBackendCall","url","method","data","getParams","URLSearchParams","options","fetch","_a","json","status","InputSelect","_g","_h","loading","setLoading","_j","optionData","setOptionData","_k","defaultValue","setDefaultValue","flag","required","fetchDataFromUrl","res","getDefaultValue","disabled","map","option","index","key","InputText","InputTextarea","FormFields","fields","rowFields","setRowFields","row","val","fieldsTemp","field","fieldLayout","currentVal","nextFieldVal","colName","FormHeading","string","title","subTitle","split","str","FormButonSubmit","rowClass","btnText","text","btnClasses","class","btnId","dom","css","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","form","submit","buttonSubmit","methods","useForm","handleSubmit","useCallback","dataBeforeSubmit","onSubmit","backend","endpoint","FormProvider","noValidate"],"mappings":"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"}